{
  "version": 3,
  "sources": ["../../../app/routes/cosmos.tsx", "../../../components/Card/Card.tsx", "../../../components/Card/Card.fixture.tsx", "../../../components/Header/Header.tsx", "../../../components/Header/Header.fixture.tsx", "../../../app/cosmos.userdeps.js"],
  "sourcesContent": ["\n        if (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n          console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n        } else {\n          var prevRefreshReg = window.$RefreshReg$;\n          var prevRefreshSig = window.$RefreshSig$;\n          window.$RefreshReg$ = (type, id) => {\n            window.$RefreshRuntime$.register(type, \"\\\"app/routes/cosmos.tsx\\\"\" + id);\n          }\n          window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n        }\n      var _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/cosmos.tsx\");\n  import.meta.hot.lastModified = \"1689624559203.9302\";\n}\nimport { useCallback, useState, useEffect } from \"react\";\nimport { decorators, fixtures, rendererConfig } from \"~/cosmos.userdeps.js\";\nconst shouldLoadCosmos = typeof window !== \"undefined\" && process.env.NODE_ENV === \"development\";\nconst headers = () => {\n  return {\n    \"Access-Control-Allow-Origin\": \"*\"\n  };\n};\nfunction Cosmos() {\n  _s();\n  const [cosmosLoaded, setCosmosLoaded] = useState(false);\n  const loadRenderer = useCallback(async () => {\n    const {\n      mountDomRenderer\n    } = (await import(\"react-cosmos/dom\")).default;\n    mountDomRenderer({\n      decorators,\n      fixtures,\n      rendererConfig\n    });\n  }, []);\n  useEffect(() => {\n    if (shouldLoadCosmos && !cosmosLoaded) {\n      loadRenderer();\n      setCosmosLoaded(true);\n    }\n  }, []);\n  return null;\n}\n_s(Cosmos, \"BwhbU7IHLhA1p11M3T0y5D8voEI=\");\n_c = Cosmos;\nexport { Cosmos as default, headers };\nvar _c;\n$RefreshReg$(_c, \"Cosmos\");\n        window.$RefreshReg$ = prevRefreshReg;\n        window.$RefreshSig$ = prevRefreshSig;\n      ", "import React from \"react\";\n\ninterface CardProps {}\n\nconst Card: React.FC<CardProps> = ({}) => {\n  return <div>i'm a card</div>;\n};\n\nCard.displayName = \"Card\";\n\nexport default Card;\n", "import Card from \"./Card\";\n\nexport default () => <Card />;\n", "import React from \"react\";\n\nconst Header = () => {\n  const [newValue, setNewValue] = React.useState(\"\");\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={newValue}\n        onChange={(e) => setNewValue(e.target.value)}\n      />\n    </header>\n  );\n};\n\nHeader.displayName = \"Header\";\n\nexport default Header;\n", "import Header from \"./Header\";\n\nexport default () => (\n  <div className=\"todoapp\">\n    <Header />\n  </div>\n);\n", "import * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n    //@ts-expect-error\n    \"app/cosmos.userdeps.js\"\n  );\n  import.meta.hot.lastModified = \"1689625180713.497\";\n}\nimport fixture0 from \"./../components/Card/Card.fixture.tsx\";\nimport fixture1 from \"./../components/Header/Header.fixture.tsx\";\nconst rendererConfig = {\n  \"port\": 5e3\n};\nconst fixtures = {\n  \"components/Card/Card.fixture.tsx\": { module: { default: fixture0 } },\n  \"components/Header/Header.fixture.tsx\": { module: { default: fixture1 } }\n};\nconst decorators = {};\nexport {\n  decorators,\n  fixtures,\n  rendererConfig\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;AAmBA,IAAAA,gBAAiD;;;ACdxC;AADT,IAAM,OAA4B,CAAC,CAAC,MAAM;AACxC,SAAO,mDAAC,SAAI,0BAAL;AAAA;AAAA;AAAA;AAAA,SAAe;AACxB;AAEA,KAAK,cAAc;AAEnB,IAAO,eAAQ;;;ACRM,IAAAC,0BAAA;AAArB,IAAO,uBAAQ,MAAM,oDAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,OAAM;;;ACF3B,mBAAkB;AAOZ,IAAAC,0BAAA;AALN,IAAM,SAAS,MAAM;AACnB,QAAM,CAAC,UAAU,WAAW,IAAI,aAAAC,QAAM,SAAS,EAAE;AAEjD,SACE,oDAAC,YAAO,WAAU,UAChB;AAAA,wDAAC,QAAG,qBAAJ;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACT;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,aAAY;AAAA,QACZ,OAAO;AAAA,QACP,UAAU,CAAC,MAAM,YAAY,EAAE,OAAO,KAAK;AAAA;AAAA,MAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA;AAAA,OAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;AAEA,OAAO,cAAc;AAErB,IAAO,iBAAQ;;;AChBX,IAAAC,0BAAA;AAFJ,IAAO,yBAAQ,MACb,oDAAC,SAAI,WAAU,WACb,8DAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,OAAQ,KADV;AAAA;AAAA;AAAA;AAAA,OAEA;;;ACJF,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAExB;AAAA,EACF;AACA,cAAY,IAAI,eAAe;AACjC;AAGA,IAAM,iBAAiB;AAAA,EACrB,QAAQ;AACV;AACA,IAAM,WAAW;AAAA,EACf,oCAAoC,EAAE,QAAQ,EAAE,SAAS,qBAAS,EAAE;AAAA,EACpE,wCAAwC,EAAE,QAAQ,EAAE,SAAS,uBAAS,EAAE;AAC1E;AACA,IAAM,aAAa,CAAC;;;ALhBZ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMR,IAAI,KAAK,aAAa;AAE5B,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAGA,IAAM,mBAAmB,OAAO,WAAW,eAAe;AAM1D,SAAS,SAAS;AAChB,KAAG;AACH,QAAM,CAAC,cAAc,eAAe,QAAI,wBAAS,KAAK;AACtD,QAAM,mBAAe,2BAAY,YAAY;AAC3C,UAAM;AAAA,MACJ;AAAA,IACF,KAAK,MAAM,OAAO,gCAAkB,GAAG;AACvC,qBAAiB;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,CAAC;AACL,+BAAU,MAAM;AACd,QAAI,oBAAoB,CAAC,cAAc;AACrC,mBAAa;AACb,sBAAgB,IAAI;AAAA,IACtB;AAAA,EACF,GAAG,CAAC,CAAC;AACL,SAAO;AACT;AACA,GAAG,QAAQ,8BAA8B;AACzC,KAAK;AAEL,IAAI;AACJ,aAAa,IAAI,QAAQ;AACjB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime"]
}
